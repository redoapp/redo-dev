concurrency:
  cancel-in-progress: true
  group: build/${{ github.ref }}
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up
        uses: ./.github/actions/setup
        with:
          bazel-cache-key: bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/lint
      - name: Test lint
        run: bazel test tools/lint:lint_test
      - if: always()
        name: Clean up
        uses: ./.github/actions/cleanup
        with:
          bazel-cache-key: bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/lint
          cache-write: ${{ github.ref == 'refs/heads/release/2.2' }}
    timeout-minutes: 15
  publish_docs:
    if: github.ref == 'refs/heads/release/2.2'
    name: Publish Docs
    needs: [lint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up
        uses: ./.github/actions/setup
        with:
          bazel-cache-key:
            bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/publish
      - name: Publish
        env:
          API_STOPLIGHT_TOKEN: ${{ secrets.API_STOPLIGHT_TOKEN }}
          WEB_STOPLIGHT_TOKEN: ${{ secrets.WEB_STOPLIGHT_TOKEN }}
        run: |
          bazel run redo/api-doc:deploy -- -b v2.2 --ci-token "$API_STOPLIGHT_TOKEN"
          bazel run redo/web-doc:deploy -- -b v2.2 --ci-token "$WEB_STOPLIGHT_TOKEN"
      - if: always()
        name: Clean up
        uses: ./.github/actions/cleanup
        with:
          bazel-cache-key:
            bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/publish-docs
          cache-write: ${{ github.ref == 'refs/heads/release/2.2' }}
    timeout-minutes: 15
  publish_npm:
    if: github.ref == 'refs/heads/release/2.2'
    name: Publish Npm Package
    needs: [lint]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up
        uses: ./.github/actions/setup
        with:
          bazel-cache-key:
            bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/publish-npm
      - id: prev
        name: Check existing package
        run: |
          echo "shasum=$(curl https://registry.npmjs.org/@redotech/redo-api-schema/latest | jq -r .dist.shasum)" | tee -a "$GITHUB_OUTPUT"
          echo "version=$(curl https://registry.npmjs.org/@redotech/redo-api-schema/latest | jq -r '.version | split(".")[2]')" | tee -a "$GITHUB_OUTPUT"
      - env:
          PREV_VERSION: ${{ steps.prev.outputs.version }}
        id: new
        name: Build package
        run: |
          bazel build "--embed_label=$PREV_VERSION" --stamp redo/api-schema-js:package
          echo "shasum=$(shasum bazel-bin/redo/api-schema-js/package.tgz | cut -d' ' -f1)" | tee -a "$GITHUB_OUTPUT"
      - env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: steps.new.outputs.shasum != steps.prev.outputs.shasum
        name: Login to npm
        run: bazel run @better_rules_javascript//npm -- c set "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN"
      - if: steps.new.outputs.shasum != steps.prev.outputs.shasum
        name: Publish to npm
        run: bazel run "--embed_label=$GITHUB_RUN_NUMBER" --stamp redo/api-schema-js:publish -- --access public
      - if: always()
        name: Clean up
        uses: ./.github/actions/cleanup
        with:
          bazel-cache-key:
            bazel/${{ runner.os }}-${{ runner.arch }}/v2.2/build/publish-npm
          cache-write: ${{ github.ref == 'refs/heads/release/2.2' }}
name: Build
on: [push, workflow_dispatch]
permissions:
  actions: write
  contents: read
  id-token: write
