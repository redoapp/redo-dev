load("@aspect_bazel_lib//lib:jq.bzl", "jq")
load("@better_rules_javascript//commonjs:rules.bzl", "cjs_root")
load("@better_rules_javascript//javascript:rules.bzl", "js_library")
load("@better_rules_javascript//npm:rules.bzl", "npm_package", "npm_publish")
load("@better_rules_javascript//typescript:rules.bzl", "ts_library")
load("@rules_pkg//pkg:mappings.bzl", "pkg_filegroup", "pkg_files")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//openapi/rules:rules.bzl", "openapi_ts")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "lib",
    srcs = [":openapi_ts"],
    compiler = "//tools/typescript:tsc",
    declaration_prefix = "lib",
    js_prefix = "lib",
    root = ":root",
    strip_prefix = "src",
)

pkg_files(
    name = "pkg",
    srcs = [
        ":lib",
        ":manifest",
        ":openapi_ts",
        "//redo/api-schema:openapi",
    ],
    renames = {
        ":manifest": "package.json",
        "//redo/api-schema:openapi": "lib/openapi.yaml",
    },
    strip_prefix = "",
)

jq(
    name = "manifest",
    srcs = ["package.json"],
    filter = """
$ARGS.named.STAMP as $stamp
| .version = "2.2." + ($stamp.BUILD_EMBED_LABEL // "0")
    """.strip(),
)

npm_package(
    name = "package",
    srcs = [":pkg"],
)

npm_publish(
    name = "publish",
    src = ":package",
)

cjs_root(
    name = "root",
    package_name = "@redotech/redo-api-schema",
    descriptors = ["package.json"],
)

openapi_ts(
    name = "openapi_ts",
    src = "//redo/api-schema:openapi",
    openapi_typescript = "//tools/openapi:openapi_typescript",
    output = "src/openapi.ts",
)
